---

stages:
  # - setup
  - build
  - unit_test
  - system_test
  # - deploy

.general_definitions: &general_definitions
  before_script:
    # Set cmake flags
    - echo 'CMAKE_FLAGS+=" -DCMAKE_GENERATOR="Ninja" -DDUNE_PYTHON_VIRTUALENV_SETUP=1 -DDUNE_PYTHON_VIRTUALENV_PATH=/duneci/modules/dune-python-venv"' >> /duneci/cmake-flags/dune_copasi.opts
  #   # define helper functions
    - DUNECONTROL=/duneci/modules/dune-common/bin/dunecontrol
    # - dune_configure() { $DUNECONTROL --opts=/duneci/dune.opts --module=$1 configure; }
    # - dune_make() { $DUNECONTROL --opts=/duneci/dune.opts --module=$1 make; }
    # - dune_all() { dune_configure $1 ; dune_make $1 ; }
  tags:
    - "cores:4"
  artifacts:
    paths:
      - /duneci/modules/dune-copasi/
      - /duneci/modules/dune-python-venv/
    expire_in: 30 minutes

# OS setup
.debian_gcc: &debian_gcc
  <<: *general_definitions
  image: registry.dune-project.org/santiago.ospina/dune-copasi:dependencies-debian-gcc-0.1
  variables:
    CI_BUILDS_DIR: /builds/santiago.ospina/dune-copasi
    DUNECI_TOOLCHAIN: "gcc-8-17"

.debian_clang: &debian_clang
  <<: *general_definitions
  image: registry.dune-project.org/santiago.ospina/dune-copasi:dependencies-debian-clang-0.1
  variables:
    CI_BUILDS_DIR: /builds/santiago.ospina/dune-copasi
    DUNECI_TOOLCHAIN: "clang-7-libcpp-17"
  allow_failure: true

.ubuntu_gcc: &ubuntu_gcc
  <<: *general_definitions
  image:  registry.dune-project.org/santiago.ospina/dune-copasi:dependencies-ubuntu-clang-0.1
  variables:
    DUNECI_TOOLCHAIN: "gcc-7-17"

.ubuntu_clang: &ubuntu_clang
  <<: *general_definitions
  image: registry.dune-project.org/santiago.ospina/dune-copasi:dependencies-ubuntu-clang-0.1
  variables:
    CI_BUILDS_DIR: /builds/santiago.ospina/dune-copasi
    DUNECI_TOOLCHAIN: "clang-6-17"

# # Stages
# .setup: &setup
#   stage: setup
#   script:
#     - cd source
#     # clone needed repositories
#     - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-common
#     - git clone --recursive https://gitlab.dune-project.org/staging/dune-logging
#     - git clone https://gitlab.dune-project.org/core/dune-geometry
#     - git clone https://gitlab.dune-project.org/core/dune-grid
#     - git clone https://gitlab.dune-project.org/staging/dune-uggrid
#     - git clone https://gitlab.dune-project.org/core/dune-istl
#     - git clone https://gitlab.dune-project.org/core/dune-localfunctions
#     - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-typetree
#     - git clone https://gitlab.dune-project.org/staging/dune-functions
#     # - git clone -b feature/allow-multidomain-vtk-compare-to-have-same-thresholds https://gitlab.dune-project.org/quality/dune-testtools
#     - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-pdelab
#     - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-multidomaingrid
#     # make required dune modules
#     # - dune_all dune-testtools
#     - dune_all dune-logging
#     - dune_all dune-pdelab
#     - dune_all dune-multidomaingrid

.build: &build
  stage: build
  script:
    - DUNECONTROL --opts=/duneci/dune.opts --only=dune-copasi all

.unit_test: &unit_test
  stage: unit_test
  script: 
    - echo 'CMAKE_FLAGS+=" -DCMAKE_BUILD_TYPE=Debug"' >> /duneci/cmake-flags/dune_copasi.opts
    - DUNECONTROL --opts=/duneci/dune.opts --only=dune-copasi configure
    - DUNECONTROL --opts=/duneci/dune.opts --only=dune-copasi make --target build_unit_tests
    - DUNECONTROL --opts=/duneci/dune.opts --only=dune-copasi bexec ctest -j4 -L "unit"
  artifacts:
    paths:
      - /duneci/modules/dune-copasi/build-cmake/test
    expire_in: 1 day

.system_test: &system_test
  stage: system_test
  script: 
    - DUNECONTROL --opts=/duneci/dune.opts --only=dune-copasi bexec ctest -j4 -L "DUNE_SYSTEMTEST"
  artifacts:
    paths:
      - /duneci/modules/dune-copasi/build-cmake/test
    expire_in: 1 day

# debian gcc
build:debian_gcc:
  <<: *debian_gcc
  <<: *build

unit_test:debian_gcc:
  <<: *debian_gcc
  <<: *unit_test
  dependencies:
    - build:debian_gcc

system_test:debian_gcc:
  <<: *debian_gcc
  <<: *system_test
  dependencies:
    - build:debian_gcc

# # ubuntu gcc
# build:ubuntu_gcc:
#   <<: *ubuntu_gcc
#   <<: *build

# unit_test:ubuntu_gcc:
#   <<: *ubuntu_gcc
#   <<: *unit_test
#   dependencies:
#     - build:ubuntu_gcc

# system_test:ubuntu_gcc:
#   <<: *ubuntu_gcc
#   <<: *system_test
#   dependencies:
#     - build:ubuntu_gcc

# # debian clang
# build:debian_clang:
#   <<: *debian_clang
#   <<: *build

# unit_test:debian_clang:
#   <<: *debian_clang
#   <<: *unit_test
#   dependencies:
#     - build:debian_clang

# system_test:debian_clang:
#   <<: *debian_clang
#   <<: *system_test
#   dependencies:
#     - build:debian_clang

# # ubuntu clang
# build:ubuntu_clang:
#   <<: *ubuntu_clang
#   <<: *build

# unit_test:ubuntu_clang:
#   <<: *ubuntu_clang
#   <<: *unit_test
#   dependencies:
#     - build:ubuntu_clang

# system_test:ubuntu_clang:
#   <<: *ubuntu_clang
#   <<: *system_test
#   dependencies:
#     - build:ubuntu_clang