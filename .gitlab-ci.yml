---


stages:
  - setup
  # - build
  # - unit_test
  # - system_test
  # - deploy

# OS setup
.debian_gcc: &debian_gcc
  image: registry.dune-project.org/docker/ci/debian:10
  variables:
    CI_BUILDS_DIR: /builds/santiago.ospina/dune-copasi
  before_script:
    # Define helper functions
    - dune_configure() { $CI_BUILDS_DIR/dune-common/bin/dunecontrol --builddir=$CI_BUILDS_DIR/build --module=$1 configure "Ninja" ; }
    - dune_make() { $CI_BUILDS_DIR/dune-common/bin/dunecontrol --builddir=$CI_BUILDS_DIR/build --module=$1 make ; }
    - dune_all() { dune_configure $1; dune_make $1 ; }
  tags:
    - "cores:2"


# .debian_clang: &debian_clang
#   image: debian:bionic
#   tags:
#     - "cores:2"

# Stages
.setup: &setup
  stage: setup
  script:
    # move everything into a subfolder dune-copasi
    - mkdir dune-copasi & ls | grep -v dune-copasi | xargs mv -t dune-copasi
    # clone needed repositories
    - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-common
    - git clone --recursive https://gitlab.dune-project.org/staging/dune-logging
    - git clone https://gitlab.dune-project.org/core/dune-geometry
    - git clone https://gitlab.dune-project.org/core/dune-grid
    - git clone https://gitlab.dune-project.org/core/dune-istl
    - git clone https://gitlab.dune-project.org/core/dune-localfunctions
    - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-typetree
    - git clone https://gitlab.dune-project.org/staging/dune-function
    - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-pdelab
    - git clone -b support/dune-copasi https://gitlab.dune-project.org/santiago.ospina/dune-multidomaingrid
    # make required dune modules
    - dune_all dune-common
    - dune_all dune-logging
    - dune_all dune-geometry
    - dune_all dune-grid
    - dune_all dune-istl
    - dune_all dune-localfunctions
    - dune_all dune-typetree
    - dune_all dune-functions
    - dune_all dune-pdelab
    - dune_all dune-multidomaingrid
  artifacts:
    paths:
      - dune-*
      - build

# .build: &build
#   stage: build
#   before_script:
#     - . /duneci/bin/duneci-init-job
#     - mv dune-logging /duneci/modules/dune-logging
#     - mv dune-multidomaingrid /duneci/modules/dune-multidomaingrid
#   after_script:
#     - mv /duneci/modules/dune-logging dune-logging
#     - mv /duneci/modules/dune-multidomaingrid dune-multidomaingrid
#   script:
#     - /duneci/modules/dune-common/bin/dunecontrol --opts=/duneci/dune.opts --only=dune-copasi vcsetup
#     - /duneci/modules/dune-common/bin/dunecontrol --opts=/duneci/dune.opts --only=dune-copasi configure
#     - /duneci/modules/dune-common/bin/dunecontrol --opts=/duneci/dune.opts --only=dune-copasi make -j2 all
#   artifacts:
#     paths:
#       - dune-logging/
#       - build-cmake/

# .unit_test: &unit_test
#   stage: unit_test
#   before_script:
#     - . /duneci/bin/duneci-init-job
#     - mv dune-logging /duneci/modules/dune-logging
#     - mv dune-multidomaingrid /duneci/modules/dune-multidomaingrid
#     - cd build-cmake
#   script: 
#     - make build_unit_tests
#     - ctest -j2 -L "unit" 

# .system_test: &system_test
#   stage: system_test
#   before_script:
#     - . /duneci/bin/duneci-init-job
#     - mv dune-logging /duneci/modules/dune-logging
#     - mv /duneci/modules/dune-multidomaingrid dune-multidomaingrid
#     - cd build-cmake
#   script: 
#     - make build_system_tests
#     - ctest -j2 -L "system"

# gcc
setup:gcc:
  <<: *debian_gcc
  <<: *setup

# build:gcc:
#   <<: *debian_gcc
#   <<: *build
#   dependencies:
#     - setup:gcc

# unit_test:gcc:
#   <<: *debian_gcc
#   <<: *unit_test
#   dependencies:
#     - build:gcc

# system_test:gcc:
#   <<: *debian_gcc
#   <<: *system_test
#   dependencies:
#     - build:gcc

# # clang
# setup:clang:
#   <<: *debian_clang
#   <<: *setup

# build:clang:
#   <<: *debian_clang
#   <<: *build
#   dependencies:
#     - setup:clang

# unit_test:clang:
#   <<: *debian_clang
#   <<: *unit_test
#   dependencies:
#     - build:clang

# system_test:clang:
#   <<: *debian_clang
#   <<: *system_test
#   dependencies:
#     - build:clang
